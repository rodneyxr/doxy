#!/usr/bin/perl -W

###############################################################################
#
# Author: Rodney Rodriguez
#
# Description: Takes the name of a docker image (ex: rodneyxr/web1) and links
# it to the proxy. If the container is deployed successfully then the proxy
# will be configured to forward any requests on the subdomain to the container.
# The proxy will then be restarted so that changes can take effect.
#
# Usage: doxy <image_name> <sub.domain.com>
#
###############################################################################

my $nargs = $#ARGV + 1;

# Check arguments
if ($nargs != 2) {
    print STDERR "Usage: doxy <image_name> <hostname>\n";
    exit;
}

my $image = shift;
my $hostname = shift;
my ($subdomain, $domain) = $hostname =~ /([^\.]*)\.(.*)/;

# Check if the image exists locally
if (!`docker images -q $image`) {
    # the image does not exist here
    print "Image '$image' does not exists locally.\n";
    print "Attempting to pull...\n";

    if (!`docker pull $image | grep '^Digest:'`) {
        exit; # failed to pull the image
    } else {
        print "Successfully downloaded the image '$image'\n";
    }
}

# Image exists locally at this point
# cmd: docker run --name <subdomain> -d --link proxy:proxy <image_name>

# Ensure that there is a continer named proxy. Stopped or running is okay.
$running = `docker inspect -f {{.State.Running}} proxy 2> /dev/null`;
if ($running eq '') {
    print STDERR "There is no container named 'proxy'. Please start it and run this script again.\n";
    exit;
}
if ($running eq "false\n") {
    print "** Please note that 'proxy' is not currently running.\n";
}

# There is a container named proxy at this point
# Ensure that the subdomain is not currently in use
$running = `docker inspect -f {{.State.Running}} $subdomain 2> /dev/null`;
if ($running ne '') {
    # container conflict will occur here
    print STDERR "The name '$subdomain' is already in use by another container.\n";
    exit;
}

# Run the container
print "Running $subdomain...\n";
`docker run --name $subdomain -d --link proxy:proxy $image`;

$ipaddr = `docker inspect --format '{{ .NetworkSettings.IPAddress }}' $subdomain 2> /dev/null`;
if ($ipaddr eq '') {
    print STDERR "Error: Failed to run $subdomain\n";
    exit;
}
chop $ipaddr; # remove the new line

# Generate the nginx config file
my $config = << "END_CONFIG";
# AUTO-GENERATED by doxy
server {
    listen       80;
    server_name  $hostname;

    location / {
        proxy_pass http://$ipaddr;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
END_CONFIG

# Open the config file for write
open(CONFIG_FILE, "> proxy/conf.d/$subdomain.conf") or
die "Error: Failed to open proxy/conf.d/$subdomain.conf: $!";
print CONFIG_FILE $config;
close CONFIG_FILE;

# Restart the proxy for changes to the effect
print "Restarting proxy...\n";
`docker restart proxy`;
